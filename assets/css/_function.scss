@import "variables";

@mixin transformHelper($props) {
  -webkit-transform: $props;
  -moz-transform: $props;
  -ms-transform: $props;
  -o-transform: $props;
  transform: $props;
}

@mixin background-size($prop) {
  -webkit-background-size: $prop;
  background-size: $prop;
}

@mixin border-radius($prop) {
  -webkit-border-radius: $prop;
  -moz-border-radius: $prop;
  border-radius: $prop;
}

@mixin transformOriginHelper($props) {
  -webkit-transform-origin: $props;
  -moz-transform-origin: $props;
  -ms-transform-origin: $props;
  -o-transform-origin: $props;
  transform-origin: $props;
}

@mixin background-gradient($color1, $color2) {
  background: -moz-linear-gradient(90deg, $color1 0%, $color2 100%);
  background: -webkit-linear-gradient(90deg, $color1 0%, $color2 100%);
  background: -ms-linear-gradient(90deg, $color1 0%, $color2 100%);
}

@mixin transitionHelper($props...) {
  -webkit-transition: $props;
  -moz-transition: $props;
  -ms-transition: $props;
  -o-transition: $props;
  transition: $props;
}

@mixin animation($props...) {
  -webkit-animation: $props;
  -o-animation: $props;
  animation: $props;
}

@mixin box-shadow($prop...) {
  -webkit-box-shadow: $prop;
  -moz-box-shadow: $prop;
  box-shadow: $prop;
}

@mixin box-sizing($prop) {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}

@mixin background-image($prop) {

  background: url(map-get($prop, 'default'));
  background: -webkit-image-set(
      map-get($prop, 'imgSet')
  ) map-get($prop, 'options');

  background: image-set(
      map-get($prop, 'imgSet')
  ) map-get($prop, 'options');
}

@mixin columns($prop) {
  columns: $prop;
  -moz-columns: $prop;
  -webkit-columns: $prop;

}

@mixin hyphens($yes) {
  @if ($yes) {
    word-break: break-word;
    -webkit-hyphens: auto;
    -moz-hyphens: auto;
    -ms-hyphens: auto;
    -o-hyphens: auto;
    hyphens: auto;
  } @else {
    word-break: inherit;
    -webkit-hyphens: inherit;
    -moz-hyphens: inherit;
    -ms-hyphens: inherit;
    -o-hyphens: inherit;
    hyphens: inherit;
  }
}

@mixin input-theme($name, $color1, $color2) {
  input, textarea, select {
    &.input--#{$name} {
      border: 1px solid $color1;
      color: $color1;

      &::placeholder {
        color: $color1;
      }

      &:focus, &:focus::placeholder {
        color: $color2;
        border-color: $color2;
      }

      &:-webkit-autofill,
      &:-webkit-autofill:hover,
      &:-webkit-autofill:focus,
      &:-webkit-autofill:active {
        -webkit-animation: autofill--#{$name} 0s forwards;
        animation: autofill--#{$name} 0s forwards;
      }

      &:-webkit-autofill,
      &:-webkit-autofill:hover,
      &:-webkit-autofill:focus {
        border: 1px solid $color1;
        -webkit-text-fill-color: $color1;
      }

      &:-webkit-autofill {
        color: $color1 !important;
      }

    }
  }

  @keyframes autofill--#{$name} {
    100% {
      background: transparent;
      color: $color1;
    }
  }

  @-webkit-keyframes autofill--#{$name} {
    100% {
      background: transparent;
      color: $color1;
    }
  }
}
